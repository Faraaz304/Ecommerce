
# version: "3.8"

# services:
#   # --- DATABASE for Customer Service ---
#   mongodb:
#     image: mongo:6.0
#     container_name: mongo_customer
#     ports:
#       - "27017:27017"
#     environment:
#       MONGO_INITDB_DATABASE: customer_db
#     volumes:
#       - mongo_data:/data/db

#   # --- DATABASE for Product & Order Services ---
#   mysql:
#     image: mysql:8.0
#     container_name: mysql_product
#     ports:
#       - "3306:3306"
#     environment:
#       MYSQL_ROOT_PASSWORD: password
#       MYSQL_DATABASE: product_db
#     volumes:
#       - mysql_data:/var/lib/mysql

#   # --- KAFKA INFRASTRUCTURE ---
#   zookeeper:
#     image: confluentinc/cp-zookeeper:latest
#     container_name: zookeeper
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000

#   kafka:
#     image: confluentinc/cp-kafka:latest
#     container_name: kafka
#     ports:
#       # Exposes Kafka to your local machine (e.g., for your Spring Boot apps)
#       - "9092:9092"
#     depends_on:
#       - zookeeper
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#       # This listener is for communication FROM your local machine TO Kafka
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

# volumes:
#   mongo_data:
#   mysql_data:



# Use this file to run ONLY Zookeeper and Kafka in Docker.
# Your databases will run locally on your machine.
version: '3.8'

services:
  # Zookeeper is a required dependency for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # The Kafka message broker
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      # This connects port 9092 inside the container to port 9092 on your
      # local machine, so your Spring Boot apps can connect to it.
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1




# # Docker Compose for Kafka (KRaft mode) â€“ no Zookeeper needed
# # Use this for local development/testing of microservices
# services:
#   kafka:
#     image: confluentinc/cp-kafka:latest
#     container_name: kafka
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_PROCESS_ROLES: broker,controller
#       KAFKA_NODE_ID: 1
#       KAFKA_LISTENERS: PLAINTEXT://:9092
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#       KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9092
#       KAFKA_NUM_PARTITIONS: 1
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#     volumes:
#       - kafka_data:/var/lib/kafka/data

# volumes:
#   kafka_data:
